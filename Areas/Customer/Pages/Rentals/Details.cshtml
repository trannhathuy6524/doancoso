@page
@model GotoCarRental.Areas.Customer.Pages.Rentals.DetailsModel
@{
    ViewData["Title"] = "Chi tiết đơn thuê";
}

<div class="container py-5">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="Customer" asp-page="/Index">Trang chủ</a></li>
            <li class="breadcrumb-item"><a asp-area="Customer" asp-page="/Rentals/Index">Đơn thuê của tôi</a></li>
            <li class="breadcrumb-item active" aria-current="page">Chi tiết đơn #@Model.Rental?.Id</li>
        </ol>
    </nav>

    <!-- Thông báo kết quả hành động -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Rental != null)
    {
        <h1 class="display-6 mb-4">
            <i class="bi bi-file-earmark-text text-primary me-2"></i>
            Chi tiết đơn thuê #@Model.Rental.Id
        </h1>

        <div class="row">
            <div class="col-lg-8">
                <!-- Thông tin xe -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">Thông tin xe</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                @if (Model.Rental.Car.CarImages != null && Model.Rental.Car.CarImages.Any())
                                {
                                    var mainImage = Model.Rental.Car.CarImages.FirstOrDefault(ci => ci.IsMainImage) ?? Model.Rental.Car.CarImages.First();
                                    <img src="/@(mainImage.ImageUrl.TrimStart('/'))" class="img-fluid rounded" alt="@Model.Rental.Car.Name">
                                }
                                else
                                {
                                    <img src="/images/car-placeholder.png" class="img-fluid rounded" alt="@Model.Rental.Car.Name">
                                }
                            </div>
                            <div class="col-md-8">
                                <h4>@Model.Rental.Car.Name</h4>
                                <p class="text-muted mb-2">
                                    <i class="bi bi-tag me-2"></i> @Model.Rental.Car.Brand.Name
                                    <span class="mx-2">|</span>
                                    <i class="bi bi-car-front me-2"></i> @Model.Rental.Car.Category.Name
                                </p>
                                <hr>
                                <div class="row">
                                    <div class="col-6">
                                        <p class="mb-1"><strong>Giá thuê ngày:</strong></p>
                                        <p>@Model.Rental.Car.PricePerDay.ToString("N0") VNĐ/ngày</p>
                                    </div>
                                    <div class="col-6">
                                        <p class="mb-1"><strong>Giá thuê giờ:</strong></p>
                                        <p>@Model.Rental.Car.PricePerHour.ToString("N0") VNĐ/giờ</p>
                                    </div>
                                </div>

                                <a asp-area="Customer" asp-page="/Cars/Details" asp-route-id="@Model.Rental.CarId" class="btn btn-outline-primary">
                                    <i class="bi bi-car-front-fill me-2"></i> Xem chi tiết xe
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Thông tin thuê xe -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">Chi tiết thuê xe</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6 class="mb-3">Thông tin thời gian</h6>
                                @if (Model.Rental.Type == GotoCarRental.Models.Rental.RentalType.ByDay)
                                {
                                    <p><strong>Hình thức thuê:</strong> <span class="badge bg-primary">Thuê theo ngày</span></p>
                                    <p><strong>Ngày bắt đầu:</strong> @Model.Rental.StartDate.ToString("dd/MM/yyyy")</p>
                                    <p><strong>Ngày kết thúc:</strong> @Model.Rental.EndDate.ToString("dd/MM/yyyy")</p>
                                    <p><strong>Số ngày thuê:</strong> @Model.Rental.Days ngày</p>
                                }
                                else
                                {
                                    <p><strong>Hình thức thuê:</strong> <span class="badge bg-info">Thuê theo giờ</span></p>
                                    <p><strong>Ngày thuê:</strong> @Model.Rental.RentalDate?.ToString("dd/MM/yyyy")</p>
                                    <p><strong>Giờ bắt đầu:</strong> @Model.Rental.StartTime?.ToString("hh\\:mm")</p>
                                    <p><strong>Giờ kết thúc:</strong> @Model.Rental.EndTime?.ToString("hh\\:mm")</p>
                                    <p><strong>Số giờ thuê:</strong> @Model.Rental.Hours giờ</p>
                                }
                            </div>
                            <div class="col-md-6">
                                <h6 class="mb-3">Hình thức dịch vụ</h6>
                                @if (Model.Rental.Service == GotoCarRental.Models.Rental.ServiceType.WithDriver)
                                {
                                    <p>
                                        <strong>Dịch vụ:</strong> 
                                        <span class="badge bg-success">Có tài xế</span>
                                    </p>
                                    <p><strong>Loại chuyến đi:</strong> 
                                        @switch(Model.Rental.Trip)
                                        {
                                            case GotoCarRental.Models.Rental.TripType.LocalTrip:
                                                <span class="badge bg-primary">Nội thành</span>
                                                break;
                                            case GotoCarRental.Models.Rental.TripType.InterCityRoundTrip:
                                                <span class="badge bg-info">Liên tỉnh khứ hồi</span>
                                                break;
                                            case GotoCarRental.Models.Rental.TripType.InterCityOneWay:
                                                <span class="badge bg-warning text-dark">Liên tỉnh một chiều</span>
                                                break;
                                        }
                                    </p>
                                    
                                    @if (!string.IsNullOrEmpty(Model.Rental.PickupAddress))
                                    {
                                        <p><strong>Địa điểm đón:</strong> @Model.Rental.PickupAddress</p>
                                    }
                                    
                                    @if (Model.Rental.EstimatedDistance.HasValue && Model.Rental.EstimatedDistance.Value > 0)
                                    {
                                        <p><strong>Khoảng cách ước tính:</strong> @Model.Rental.EstimatedDistance.Value km</p>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(Model.Rental.DriverName))
                                    {
                                        <p>
                                            <strong>Tài xế:</strong> @Model.Rental.DriverName
                                            @if (!string.IsNullOrEmpty(Model.Rental.DriverPhone))
                                            {
                                                <span> | <i class="bi bi-telephone"></i> @Model.Rental.DriverPhone</span>
                                            }
                                        </p>
                                    }
                                }
                                else
                                {
                                    <p><strong>Dịch vụ:</strong> <span class="badge bg-primary">Tự lái xe</span></p>

                                    <!-- Thêm phần hiển thị phương thức nhận xe -->
                                    <div class="mt-3">
                                        <h6 class="fw-bold mb-2"><i class="bi bi-signpost-2 me-2"></i>Phương thức nhận xe</h6>
                                        @if (Model.Rental.IsDeliveryRequested)
                                        {
                                            <div class="alert alert-info py-2">
                                                <p class="mb-1"><strong>Hình thức:</strong> <span class="badge bg-primary">Giao xe tận nơi</span></p>
                                                @if (!string.IsNullOrEmpty(Model.Rental.DeliveryAddress))
                                                {
                                                    <p class="mb-1"><strong>Địa chỉ giao:</strong> @Model.Rental.DeliveryAddress</p>
                                                }
                                                @if (Model.Rental.DeliveryFee > 0)
                                                {
                                                    <p class="mb-0"><strong>Phí giao xe:</strong> @Model.Rental.DeliveryFee.ToString("N0") VNĐ</p>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="alert alert-secondary py-2">
                                                <p class="mb-1"><strong>Hình thức:</strong> <span class="badge bg-secondary">Tự đến lấy xe</span></p>
                                                @if (!string.IsNullOrEmpty(Model.Rental.Car.DetailedAddress))
                                                {
                                                    <p class="mb-0"><strong>Địa chỉ xe:</strong> @Model.Rental.Car.DetailedAddress</p>
                                                }
                                            </div>
                                        }
                                    </div>
                                }
                                
                                <p><strong>Phương thức thanh toán:</strong> @Model.Rental.PaymentMethod</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Thông tin địa điểm và bản đồ -->
                @if (Model.Rental.Service == GotoCarRental.Models.Rental.ServiceType.WithDriver &&
                     Model.Rental.PickupLatitude.HasValue && Model.Rental.PickupLongitude.HasValue)
                {
                    <div class="card shadow-sm mb-4">
                        <div class="card-header bg-info text-white">
                            <h5 class="card-title mb-0"><i class="bi bi-map me-2"></i> Bản đồ hành trình</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-@(Model.Rental.DropoffAddress != null && Model.Rental.DropoffLatitude.HasValue ? "6" : "12")">
                                    <h6 class="fw-bold mb-2"><i class="bi bi-geo-alt-fill me-2"></i>Điểm đón khách</h6>
                                    <div id="pickupMap" style="height: 250px;" class="mb-2 border rounded"></div>
                                    <p>@Model.Rental.PickupAddress</p>
                                    <a href="https://maps.google.com/?q=@Model.Rental.PickupLatitude,@Model.Rental.PickupLongitude" 
                                       target="_blank" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-box-arrow-up-right me-1"></i>Mở trong Google Maps
                                    </a>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(Model.Rental.DropoffAddress) && 
                                     Model.Rental.DropoffLatitude.HasValue && Model.Rental.DropoffLongitude.HasValue)
                                {
                                    <div class="col-md-6">
                                        <h6 class="fw-bold mb-2"><i class="bi bi-geo-alt me-2"></i>Điểm trả khách</h6>
                                        <div id="dropoffMap" style="height: 250px;" class="mb-2 border rounded"></div>
                                        <p>@Model.Rental.DropoffAddress</p>
                                        <a href="https://maps.google.com/?q=@Model.Rental.DropoffLatitude,@Model.Rental.DropoffLongitude" 
                                           target="_blank" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-box-arrow-up-right me-1"></i>Mở trong Google Maps
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
                else if (Model.Rental.Service == GotoCarRental.Models.Rental.ServiceType.SelfDrive)
                {
                    @if (Model.Rental.IsDeliveryRequested && 
                        Model.Rental.DeliveryLatitude.HasValue && Model.Rental.DeliveryLongitude.HasValue)
                    {
                        <!-- Hiển thị bản đồ địa điểm giao xe -->
                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-info text-white">
                                <h5 class="card-title mb-0"><i class="bi bi-truck me-2"></i> Địa điểm giao xe</h5>
                            </div>
                            <div class="card-body">
                                <div id="deliveryMap" style="height: 300px;" class="mb-3 border rounded"></div>
                                <p><strong>Địa chỉ giao xe:</strong> @Model.Rental.DeliveryAddress</p>
                                <a href="https://maps.google.com/?q=@Model.Rental.DeliveryLatitude,@Model.Rental.DeliveryLongitude" 
                                   target="_blank" class="btn btn-outline-primary">
                                    <i class="bi bi-box-arrow-up-right me-2"></i>Mở trong Google Maps
                                </a>
                            </div>
                        </div>
                    }
                    else if (Model.Rental.Car.Latitude.HasValue && Model.Rental.Car.Longitude.HasValue)
                    {
                        <!-- Hiển thị bản đồ vị trí xe -->
                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-info text-white">
                                <h5 class="card-title mb-0"><i class="bi bi-car-front me-2"></i> Vị trí xe</h5>
                            </div>
                            <div class="card-body">
                                <div id="carLocationMap" style="height: 300px;" class="mb-3 border rounded"></div>
                                <div class="d-flex justify-content-between align-items-center">
                                    <p class="mb-0"><strong>Địa chỉ xe:</strong> @Model.Rental.Car.DetailedAddress</p>
                                    <a href="https://maps.google.com/?q=@Model.Rental.Car.Latitude,@Model.Rental.Car.Longitude" 
                                       target="_blank" class="btn btn-outline-primary">
                                        <i class="bi bi-box-arrow-up-right me-2"></i>Mở trong Google Maps
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                }

                <!-- Chi tiết giá -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">Chi tiết giá</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-borderless">
                                <tbody>
                                    @if (Model.Rental.Type == GotoCarRental.Models.Rental.RentalType.ByDay)
                                    {
                                        decimal basePrice = Model.Rental.Car.PricePerDay * Model.Rental.Days;
                                        <tr>
                                            <td>Giá thuê xe</td>
                                            <td>@Model.Rental.Car.PricePerDay.ToString("N0") VNĐ × @Model.Rental.Days ngày</td>
                                            <td class="text-end">@basePrice.ToString("N0") VNĐ</td>
                                        </tr>
                                    }
                                    else
                                    {
                                        decimal hourlyRate = Model.Rental.Car.PricePerHour > 0 ? 
                                            Model.Rental.Car.PricePerHour : 
                                            Model.Rental.Car.PricePerDay / 24;
                
                                        int hours = Model.Rental.Hours ?? 0;
                                        if (hours < 1) hours = 1;
                
                                        decimal hourlyTotal = hourlyRate * hours;
                                        <tr>
                                            <td>Giá thuê xe</td>
                                            <td>@hourlyRate.ToString("N0") VNĐ × @hours giờ</td>
                                            <td class="text-end">@hourlyTotal.ToString("N0") VNĐ</td>
                                        </tr>
                                    }
                    
                                    @if (Model.Rental.Service == GotoCarRental.Models.Rental.ServiceType.WithDriver)
                                    {
                                        @if (Model.Rental.Type == GotoCarRental.Models.Rental.RentalType.ByDay)
                                        {
                                            decimal calculatedDriverFee = Model.Rental.Car.DriverFeePerDay * Model.Rental.Days;
                                            <tr>
                                                <td>Phí tài xế</td>
                                                <td>@Model.Rental.Car.DriverFeePerDay.ToString("N0") VNĐ × @Model.Rental.Days ngày</td>
                                                <td class="text-end">@calculatedDriverFee.ToString("N0") VNĐ</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            decimal driverHourlyRate = Model.Rental.Car.DriverFeePerHour > 0 ? 
                                                Model.Rental.Car.DriverFeePerHour : 
                                                Model.Rental.Car.DriverFeePerDay / 24;
            
                                            int driverHours = Model.Rental.Hours ?? 0;
                                            if (driverHours < 1) driverHours = 1;
                            
                                            decimal calculatedDriverFee = driverHourlyRate * driverHours;
                                            <tr>
                                                <td>Phí tài xế</td>
                                                <td>@driverHourlyRate.ToString("N0") VNĐ × @driverHours giờ</td>
                                                <td class="text-end">@calculatedDriverFee.ToString("N0") VNĐ</td>
                                            </tr>
                                        }
                        
                                        @if (Model.Rental.DistanceFee.HasValue && Model.Rental.DistanceFee.Value > 0)
                                        {
                                            decimal kmFee = 5000m;
                                            decimal distance = Model.Rental.EstimatedDistance ?? 0;
                                            <tr>
                                                <td>Phí khoảng cách</td>
                                                <td>
                                                    @if (Model.Rental.Trip == GotoCarRental.Models.Rental.TripType.InterCityOneWay)
                                                    {
                                                        <span>@kmFee.ToString("N0") VNĐ/km × @distance km × 2 chiều</span>
                                                    }
                                                    else
                                                    {
                                                        <span>@kmFee.ToString("N0") VNĐ/km × @distance km</span>
                                                    }
                                                </td>
                                                <td class="text-end">@Model.Rental.DistanceFee.Value.ToString("N0") VNĐ</td>
                                            </tr>
                                        }
                                    }

                                    @if (Model.Rental.IsDeliveryRequested && Model.Rental.DeliveryFee > 0)
                                    {
                                        <tr>
                                            <td>Phí giao xe</td>
                                            <td>Giao xe tận nơi</td>
                                            <td class="text-end">@Model.Rental.DeliveryFee.ToString("N0") VNĐ</td>
                                        </tr>
                                    }
                    
                                    <tr class="border-top">
                                        <td colspan="2" class="fw-bold">TỔNG CỘNG</td>
                                        <td class="text-end fw-bold text-primary fs-5">@Model.Rental.TotalPrice.ToString("N0") VNĐ</td>
                                    </tr>

                                    <!-- Thêm ghi chú về phí hoa hồng -->
                                    @if (Model.Rental.Status == (int)GotoCarRental.Models.Rental.RentalStatus.Completed)
                                    {
                                        <tr>
                                            <td colspan="3" class="small text-muted">
                                                <em>* Đã bao gồm phí dịch vụ hệ thống @Model.Rental.CommissionRate%</em>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <!-- Trạng thái đơn hàng -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">Trạng thái đơn hàng</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            @switch (Model.Rental.Status)
                            {
                                case (int)GotoCarRental.Models.Rental.RentalStatus.Pending:
                                    <div class="alert alert-warning">
                                        <div class="d-flex">
                                            <div class="me-3">
                                                <i class="bi bi-hourglass-split fs-3"></i>
                                            </div>
                                            <div>
                                                <h5 class="alert-heading">Chờ xác nhận</h5>
                                                <p class="mb-0">Đơn thuê của bạn đang chờ chủ xe xác nhận.</p>
                                            </div>
                                        </div>
                                    </div>
                                    break;
                                case (int)GotoCarRental.Models.Rental.RentalStatus.Confirmed:
                                    <div class="alert alert-success">
                                        <div class="d-flex">
                                            <div class="me-3">
                                                <i class="bi bi-check-circle fs-3"></i>
                                            </div>
                                            <div>
                                                <h5 class="alert-heading">Đã xác nhận</h5>
                                                <p class="mb-0">Đơn thuê đã được chủ xe xác nhận.</p>
                                            </div>
                                        </div>
                                    </div>
                                    break;
                                
                                case (int)GotoCarRental.Models.Rental.RentalStatus.Completed:
                                    <div class="alert alert-success">
                                        <div class="d-flex">
                                            <div class="me-3">
                                                <i class="bi bi-trophy fs-3"></i>
                                            </div>
                                            <div>
                                                <h5 class="alert-heading">Đã hoàn thành</h5>
                                                <p class="mb-0">Đơn thuê đã hoàn thành.</p>
                                            </div>
                                        </div>
                                    </div>
                                    break;
                                case (int)GotoCarRental.Models.Rental.RentalStatus.Canceled:
                                    <div class="alert alert-danger">
                                        <div class="d-flex">
                                            <div class="me-3">
                                                <i class="bi bi-x-circle fs-3"></i>
                                            </div>
                                            <div>
                                                <h5 class="alert-heading">Đã hủy</h5>
                                                <p class="mb-0">Đơn thuê đã bị hủy.</p>
                                            </div>
                                        </div>
                                    </div>
                                    break;
                               case (int)GotoCarRental.Models.Rental.RentalStatus.InProgress:
                                    <div class="alert alert-info">
                                        <div class="d-flex">
                                            <div class="me-3">
                                                <i class="bi bi-car-front fs-3"></i>
                                            </div>
                                            <div>
                                                <h5 class="alert-heading">Đang thực hiện</h5>
                                                <p class="mb-0">Đơn thuê xe của bạn đang được thực hiện.</p>
                                            </div>
                                        </div>
                                    </div>
                                    break;
                                default:
                                    <div class="alert alert-secondary">
                                        <div class="d-flex">
                                            <div class="me-3">
                                                <i class="bi bi-question-circle fs-3"></i>
                                            </div>
                                            <div>
                                                <h5 class="alert-heading">Không xác định</h5>
                                                <p class="mb-0">Trạng thái đơn thuê không xác định.</p>
                                            </div>
                                        </div>
                                    </div>
                                    break;
                            }
                        </div>

                        <div class="d-grid gap-2">
                            @if (Model.Rental.Status == (int)GotoCarRental.Models.Rental.RentalStatus.Pending)
                            {
                                <form method="post" asp-page-handler="Cancel" asp-route-id="@Model.Rental.Id" onsubmit="return confirm('Bạn có chắc chắn muốn hủy đơn thuê này?');">
                                    <button type="submit" class="btn btn-danger w-100">
                                        <i class="bi bi-x-circle me-2"></i> Hủy đơn thuê
                                    </button>
                                </form>
                            }

                            @if (Model.Rental.Status == (int)GotoCarRental.Models.Rental.RentalStatus.Completed && !Model.HasReviewed)
                            {
                                <a asp-area="Customer" asp-page="/Reviews/Create" asp-route-rentalId="@Model.Rental.Id" class="btn btn-primary">
                                    <i class="bi bi-star me-2"></i> Đánh giá xe
                                </a>
                            }
                        </div>
                    </div>
                </div>

                <!-- Thông tin chủ xe -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">Thông tin chủ xe</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                            <div class="me-3">
                                <i class="bi bi-person-circle fs-1 text-secondary"></i>
                            </div>
                            <div>
                                <h5 class="mb-0">@Model.Rental.Car.User?.FullName</h5>
                                <p class="text-muted mb-0">Chủ xe</p>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(Model.Rental.Car.User?.PhoneNumber))
                        {
                            <div class="d-flex align-items-center mb-2">
                                <div class="me-2">
                                    <i class="bi bi-telephone text-primary"></i>
                                </div>
                                <div>@Model.Rental.Car.User.PhoneNumber</div>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.Rental.Car.User?.Email))
                        {
                            <div class="d-flex align-items-center mb-2">
                                <div class="me-2">
                                    <i class="bi bi-envelope text-primary"></i>
                                </div>
                                <div>@Model.Rental.Car.User.Email</div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger">
            <h4 class="alert-heading">Không tìm thấy đơn thuê</h4>
            <p>Đơn thuê bạn đang tìm không tồn tại hoặc bạn không có quyền truy cập.</p>
            <a asp-area="Customer" asp-page="/Rentals/Index" class="btn btn-primary">
                <i class="bi bi-arrow-left me-2"></i> Quay lại danh sách đơn thuê
            </a>
        </div>
    }
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Khởi tạo bản đồ điểm đón (nếu thuê có tài xế)
            const pickupMap = document.getElementById('pickupMap');
            if (pickupMap && @Json.Serialize(Model.Rental?.PickupLatitude != null) && 
                @Json.Serialize(Model.Rental?.PickupLongitude != null)) {
                
                const pickupLat = @Json.Serialize(Model.Rental?.PickupLatitude);
                const pickupLng = @Json.Serialize(Model.Rental?.PickupLongitude);
                
                const map = L.map('pickupMap').setView([pickupLat, pickupLng], 15);
                
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                
                L.marker([pickupLat, pickupLng]).addTo(map)
                    .bindPopup('Điểm đón khách')
                    .openPopup();
            }
            
            // Khởi tạo bản đồ điểm trả (nếu có điểm trả khác điểm đón)
            const dropoffMap = document.getElementById('dropoffMap');
            if (dropoffMap && @Json.Serialize(Model.Rental?.DropoffLatitude != null) && 
                @Json.Serialize(Model.Rental?.DropoffLongitude != null)) {
                
                const dropoffLat = @Json.Serialize(Model.Rental?.DropoffLatitude);
                const dropoffLng = @Json.Serialize(Model.Rental?.DropoffLongitude);
                
                const map = L.map('dropoffMap').setView([dropoffLat, dropoffLng], 15);
                
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                
                L.marker([dropoffLat, dropoffLng]).addTo(map)
                    .bindPopup('Điểm trả khách')
                    .openPopup();
            }
            
            // Khởi tạo bản đồ địa điểm giao xe (nếu có giao xe)
            const deliveryMap = document.getElementById('deliveryMap');
            if (deliveryMap && @Json.Serialize(Model.Rental?.DeliveryLatitude != null) && 
                @Json.Serialize(Model.Rental?.DeliveryLongitude != null)) {
                
                const deliveryLat = @Json.Serialize(Model.Rental?.DeliveryLatitude);
                const deliveryLng = @Json.Serialize(Model.Rental?.DeliveryLongitude);
                
                const map = L.map('deliveryMap').setView([deliveryLat, deliveryLng], 15);
                
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                
                L.marker([deliveryLat, deliveryLng]).addTo(map)
                    .bindPopup('Địa điểm giao xe')
                    .openPopup();
            }
            
            // Khởi tạo bản đồ vị trí xe (nếu tự đến lấy xe)
            const carLocationMap = document.getElementById('carLocationMap');
            if (carLocationMap && @Json.Serialize(Model.Rental?.Car?.Latitude != null) && 
                @Json.Serialize(Model.Rental?.Car?.Longitude != null)) {
                
                const carLat = @Json.Serialize(Model.Rental?.Car?.Latitude);
                const carLng = @Json.Serialize(Model.Rental?.Car?.Longitude);
                
                const map = L.map('carLocationMap').setView([carLat, carLng], 15);
                
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                
                L.marker([carLat, carLng]).addTo(map)
                    .bindPopup('Vị trí xe')
                    .openPopup();
            }

            // Hiển thị chỉ đường trên Google Maps
            document.getElementById('getDirectionsBtn')?.addEventListener('click', function() {
                var lat = @Model.Rental?.Car?.Latitude;
                var lng = @Model.Rental?.Car?.Longitude;

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        function(position) {
                            var userLat = position.coords.latitude;
                            var userLng = position.coords.longitude;
                            var googleMapsUrl = `https://www.google.com/maps/dir/?api=1&origin=${userLat},${userLng}&destination=${lat},${lng}&travelmode=driving`;
                            window.open(googleMapsUrl, '_blank');
                        },
                        function(error) {
                            var googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${lat},${lng}`;
                            window.open(googleMapsUrl, '_blank');
                        }
                    );
                } else {
                    var googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${lat},${lng}`;
                    window.open(googleMapsUrl, '_blank');
                }
            });
        });
    </script>
}